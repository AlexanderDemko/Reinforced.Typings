//     This code was generated by a Reinforced.Typings tool. 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.


module Reinforced.Typings.Samples.Difficult.CodeGenerators.Controllers {
	export class JQueryController
	{
		public static SimpleIntControllerMethod(loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<number>
		{
			return QueryController.query<number>(
			        '/JQuery/SimpleIntControllerMethod', 
			        {  }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerMethodWithParameters(number: number, s: string, boolValue: boolean, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<string>
		{
			return QueryController.query<string>(
			        '/JQuery/ControllerMethodWithParameters', 
			        { 'number': number, 's': s, 'boolValue': boolValue }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerReturningObject(loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel>
		{
			return QueryController.query<IJQuerySampleResponseModel>(
			        '/JQuery/ControllerReturningObject', 
			        {  }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerReturningObjectWithParameters(echo: string, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel>
		{
			return QueryController.query<IJQuerySampleResponseModel>(
			        '/JQuery/ControllerReturningObjectWithParameters', 
			        { 'echo': echo }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static VoidMethodWithParameters(model: Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<any>
		{
			return QueryController.query<any>(
			        '/JQuery/VoidMethodWithParameters', 
			        { 'model': model }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static VoidMethodWithParameters1(model: Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<(arg: number, arg1: string) => any>
		{
			return QueryController.query<Reinforced.Typings.Ast.RtDelegateType>(
			        '/JQuery/VoidMethodWithParameters1', 
			        { 'model': model }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
	}
}
module Reinforced.Typings.Samples.Difficult.CodeGenerators.Models {
	export interface IJQuerySampleResponseModel
	{
		Message: string;
		Success: boolean;
		CurrentTime: string;
	}
}
