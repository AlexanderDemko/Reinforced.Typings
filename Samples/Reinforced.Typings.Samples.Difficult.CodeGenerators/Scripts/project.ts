//     This code was generated by a Reinforced.Typings tool. 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.


module Reinforced.Typings.Samples.Difficult.CodeGenerators.Controllers {
    import IjQuerySampleResponseModel = Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel;

    export class JQueryController
	{
		public static SimpleIntControllerMethod(loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<number>
		{
			return QueryController.query<number>('/JQuery/SimpleIntControllerMethod', {  }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerMethodWithParameters(number: number, s: string, boolValue: boolean, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<string>
		{
			return QueryController.query<string>('/JQuery/ControllerMethodWithParameters', { 'number': number, 's': s, 'boolValue': boolValue }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerReturningObject(loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel>
		{
			return QueryController.query<IjQuerySampleResponseModel>('/JQuery/ControllerReturningObject', {  }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
		public static ControllerReturningObjectWithParameters(echo: string, loadingPlaceholderSelector: string = '', disableElement: string = '') : JQueryPromise<Reinforced.Typings.Samples.Difficult.CodeGenerators.Models.IJQuerySampleResponseModel>
		{
			return QueryController.query<IjQuerySampleResponseModel>('/JQuery/ControllerReturningObjectWithParameters', { 'echo': echo }, 
			        loadingPlaceholderSelector,
			        disableElement
			    );
		}
	}
}

module Reinforced.Typings.Samples.Difficult.CodeGenerators.Models {
	export interface IJQuerySampleResponseModel
	{
	}
}
